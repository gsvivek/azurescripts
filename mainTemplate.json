{
	"$schema" : "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
	"contentVersion" : "1.0.0.0",
	"parameters" : {
		"adminUsername" : {
			"type" : "string",
			"metadata" : {
				"description" : "Admin username of the VM"
			}
		},
		"adminPassword" : {
			"type" : "securestring",
			"metadata" : {
				"description" : "Admin password of the VM"
			}
		},
		"vmSize" : {
			"type" : "string",
			"defaultValue" : "Standard_D1",
			"metadata" : {
				"description" : "Size of the VM"
			}
		},
		"publicIPAddressName" : {
			"type" : "string",
			"defaultValue" : "myPublicIP",
			"metadata" : {
				"description" : "Public IP Name of the VM"
			}
		},
		"dnsNameForPublicIP" : {
			"type" : "string",
			"metadata" : {
				"description" : "Unique DNS Name for the Public IP used to access the Virtual Machine."
			}
		},
		"osDropdown" : {
			"type" : "string",
			"defaultValue" : "win2012R2",
			"allowedValues" : [
				"win2012R2",
				"ubuntuLin12"
			]
			"metadata" : {
				"description" : "The OS type chosen by the user. Allowed values are Windows 2012 R2 and Ubuntu Linux 12.04"
			}
		},
		"cloudEmail" : {
			"type" : "string",
			"defaultValue" : "",
			"metadata" : {
				"description" : "The email of the Informatica Cloud user."
			}
		},
		"cloudPassword" : {
			"type" : "secureString",
			"defaultValue" : "",
			"metadata" : {
				"description" : "The password for the Informatica Cloud user account."
			}
		},
		"cloudTier1Connector" : {
			"type" : "string",
			"defaultValue" : "",
			"metadata" : {
				"description" : "The primary connector chosen by the user."
			}
		},
		"cloudTier2Connector" : {
			"type" : "string",
			"defaultValue" : "",
			"metadata" : {
				"description" : "The secondary connector chosen by the user."
			}
		}
	},
	"variables" : {
		"imagePublisher" : "Informatica",
		"imageOffer" : "ics-payg",
		"OSImageURI" : "https://infacloudazure2351.blob.core.windows.net/system/Microsoft.Compute/Images/ics-payg/ics-payg-osDisk.b560dfe0-f352-4722-b497-9243e7a32d57.vhd",
		"nicName" : "myVMNic",
		"addressPrefix" : "10.0.0.0/16",
		"subnetName" : "Subnet",
		"subnetPrefix" : "10.0.0.0/24",
		"storageAccountType": "Standard_LRS",
		"publicIPAddressType" : "Dynamic",
		"vmStorageAccountContainerName" : "vhds",
		"vmName" : "ICSPAYG",
		"virtualNetworkName" : "MyVNET",
		"vnetID" : "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
		"subnetRef" : "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
		"vhdStorageAccountName" : "[concat(uniqueString(resourceGroup().id), 'storage')]"
	},
	"resources" : [
		{
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('vhdStorageAccountName')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[resourceGroup().location]",
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            }
        },
		{
			"apiVersion" : "2015-05-01-preview",
			"type" : "Microsoft.Network/publicIPAddresses",
			"name" : "[parameters('publicIPAddressName')]",
			"location" : "[resourceGroup().location]",
			"properties" : {
				"publicIPAllocationMethod" : "[variables('publicIPAddressType')]",
				"dnsSettings" : {
					"domainNameLabel" : "[parameters('dnsNameForPublicIP')]"
				}
			}
		}, {
			"apiVersion" : "2015-05-01-preview",
			"type" : "Microsoft.Network/virtualNetworks",
			"name" : "[variables('virtualNetworkName')]",
			"location" : "[resourceGroup().location]",
			"properties" : {
				"addressSpace" : {
					"addressPrefixes" : [
						"[variables('addressPrefix')]"
					]
				},
				"subnets" : [{
						"name" : "[variables('subnetName')]",
						"properties" : {
							"addressPrefix" : "[variables('subnetPrefix')]"
						}
					}
				]
			}
		}, {
			"apiVersion" : "2015-05-01-preview",
			"type" : "Microsoft.Network/networkInterfaces",
			"name" : "[variables('nicName')]",
			"location" : "[resourceGroup().location]",
			"dependsOn" : [
				"[parameters('publicIPAddressName')]",
				"[variables('virtualNetworkName')]"
			],
			"properties" : {
				"ipConfigurations" : [{
						"name" : "ipconfig1",
						"properties" : {
							"privateIPAllocationMethod" : "Dynamic",
							"publicIPAddress" : {
								"id" : "[resourceId('Microsoft.Network/publicIPAddresses',parameters('publicIPAddressName'))]"
							},
							"subnet" : {
								"id" : "[variables('subnetRef')]"
							}
						}
					}
				]
			}
		}, {
			"apiVersion" : "2015-05-01-preview",
			"type" : "Microsoft.Compute/virtualMachines",
			"name" : "[variables('vmName')]",
			"location" : "[resourceGroup().location]",
			"dependsOn" : [
				"[variables('vhdStorageAccountName')]",
				"[variables('nicName')]"
			],
			"properties" : {
				"hardwareProfile" : {
					"vmSize" : "[variables('vmSize')]"
				},
				"osProfile" : {
					"computerName" : "[variables('vmName')]",
					"adminUsername" : "[parameters('adminUsername')]",
					"adminPassword" : "[parameters('adminPassword')]"
				},
				"storageProfile" : {
					"imageReference" : {
						"publisher" : "[variables('imagePublisher')]",
						"offer" : "[variables('imageOffer')]",
						"sku" : "[parameters('osDropdown')]",
						"version" : "latest"
					},
					"osDisk" : {
						"name" : "osdisk",
						"vhd" : {
							"uri" : "[variables('OSImageURI')]"
						},
						"caching" : "ReadWrite",
						"createOption" : "FromImage"
					}
				},
				"networkProfile" : {
					"networkInterfaces" : [{
							"id" : "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
						}
					]
				}
			},
			"resources" : [{
					"type" : "extensions",
					"name" : "CustomScriptExtension",
					"apiVersion" : "2015-05-01-preview",
					"location" : "[resourceGroup().location]",
					"dependsOn" : [
						"[variables('vmName')]"
					],
					"properties" : {
						"publisher" : "Microsoft.Compute",
						"type" : "CustomScriptExtension",
						"typeHandlerVersion" : "1.8",
						"autoUpgradeMinorVersion" : true,
						"settings" : {
							"fileUris" : ["https://github.com/gsvivek/azurescripts/raw/master/InfaCloudExtProvision.ps1"],
							"commandToExecute" : "[concat('powershell.exe -ExecutionPolicy Unrestricted -File InfaCloudExtProvision.ps1 ', [parameters('cloudEmail')], ' ', [parameters('cloudPassword')], ' ', [concat([parameters('cloudTier1Connector')], '|', [parameters('cloudTier2Connector')])])]"
						}
					}
				}
			]
		}
	]
}
