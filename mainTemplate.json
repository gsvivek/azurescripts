{
	"$schema" : "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
	"contentVersion" : "1.0.0.0",
	"parameters" : {
		"adminUsername" : {
			"type" : "string",
			"metadata" : {
				"description" : "Admin username of the VM"
			}
		},
		"adminPassword" : {
			"type" : "securestring",
			"metadata" : {
				"description" : "Admin password of the VM"
			}
		},
		"vmSize" : {
			"type" : "string",
			"defaultValue" : "",
			"metadata" : {
				"description" : "Size of the VM"
			}
		},
		"storageAccountName" : {
			"type" : "string",
			"metadata" : {
				"description" : "Name of storage account"
			}
		},
		"storageAccountNewOrExisting" : {
			"type" : "string",
			"defaultValue" : "new",
			"allowedValues" : [
				"new",
				"existing"
			],
			"metadata" : {
				"Description" : "Indicates whether the Storage Account is new or existing"
			}
		},
		"storageAccountType" : {
			"type" : "string",
			"metadata" : {
				"description" : "The type of the Storage Account created"
			},
			"defaultValue" : "Standard_LRS"
		},
		"existingStorageAccountRG" : {
			"type" : "string",
			"metadata" : {
				"description" : "Resource Group of the Existing storage."
			},
			"defaultValue" : ""
		},
		"dnsNameForPublicIP" : {
			"type" : "string",
			"metadata" : {
				"description" : "Unique DNS Name for the Public IP used to access the Virtual Machine."
			}
		},
		"existingIPRGName" : {
			"type" : "string",
			"defaultValue" : ""
		},
		"publicIPAddressName" : {
			"type" : "string"
		},
		"publicIPNewOrExisting" : {
			"type" : "string",
			"defaultValue" : "new",
			"allowedValues" : [
				"new",
				"existing"
			],
			"metadata" : {
				"Description" : "Indicates whether the public IP is new or existing"
			}
		},
		"os" : {
			"type" : "string",
			"defaultValue" : "windows",
			"allowedValues" : [
				"windows",
				"linux"
			],
			"metadata" : {
				"description" : "The OS type chosen by the user. Allowed values are Windows and Linux"
			}
		},
		"cloudEmail" : {
			"type" : "string",
			"defaultValue" : "",
			"metadata" : {
				"description" : "The email of the Informatica Cloud user."
			}
		},
		"cloudPassword" : {
			"type" : "secureString",
			"defaultValue" : "",
			"metadata" : {
				"description" : "The password for the Informatica Cloud user account."
			}
		},
		"cloudName" : {
			"type" : "string",
			"defaultValue" : "",
			"metadata" : {
				"description" : "The name of the Informatica Cloud user."
			}
		},
		"cloudTitle" : {
			"type" : "string",
			"defaultValue" : "",
			"metadata" : {
				"description" : "The title of the Informatica Cloud user."
			}
		},
		"cloudPhone" : {
			"type" : "string",
			"defaultValue" : "",
			"metadata" : {
				"description" : "The phone number of the Informatica Cloud user."
			}
		},
		"cloudOrgName" : {
			"type" : "string",
			"defaultValue" : "",
			"metadata" : {
				"description" : "The organization name of the Informatica Cloud user."
			}
		},
		"cloudCountry" : {
			"type" : "string",
			"defaultValue" : "",
			"metadata" : {
				"description" : "The country of the Informatica Cloud user."
			}
		},
		"cloudConnector1" : {
			"type" : "string",
			"defaultValue" : "",
			"metadata" : {
				"description" : "The target connector chosen by the user."
			}
		},
		"cloudConnector2" : {
			"type" : "string",
			"defaultValue" : "",
			"metadata" : {
				"description" : "The source connector chosen by the user."
			}
		},
		"artifactsBaseUrl" : {
			"type" : "string",
			"metadata" : {
				"artifactsBaseUrl" : "Base URL of the Publisher Template gallery package"
			}
		}
	},
	"variables" : {
		"apiVersion" : "2015-05-01",
		"scriptsUri" : "[concat(parameters('artifactsBaseUrl'),'/')]",
		"nicName" : "myVMNic",
		"addressPrefix" : "10.0.0.0/16",
		"subnetName" : "Subnet",
		"subnetPrefix" : "10.0.0.0/24",
		"vmName" : "[concat('ics-payg-',parameters('os'))]",
		"virtualNetworkName" : "MyVNET",
		"vnetID" : "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
		"subnetRef" : "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
		"connectorUUIDList" : "[concat(parameters('cloudConnector1'),'|',parameters('cloudConnector2'))]",
		"storageAccountSetupURL" : "[concat(parameters('scriptsUri'),'storageAccount-',parameters('storageAccountNewOrExisting'),'.json')]",
		"publicIPAdressSetupURL" : "[concat(parameters('scriptsUri'),'publicip-',parameters('publicIPNewOrExisting'),'.json')]",
		"vmSetupURL" : "[concat(parameters('scriptsUri'), 'vm_script_', parameters('os'), '.json')]",
		"vmCustonScriptSetupURL" : "[concat(parameters('scriptsUri'), 'vm_custom_script_', parameters('os'), '.json')]"
	},
	"resources" : [
		{
			"name": "storageAcountSetup",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "[variables('apiVersion')]",
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[variables('storageAccountSetupURL')]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"storageAccountType": {
						"value": "[parameters('storageAccountType')]"
					},
					"storageAccountName": {
						"value": "[parameters('storageAccountName')]"
					},
					"storageAccountExistingRG": {
						"value": "[parameters('existingStorageAccountRG')]"
					}
				}
			}
		}, {
			"name": "publicIPSetup",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "[variables('apiVersion')]",
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[variables('publicIPAdressSetupURL')]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"publicIPAddressName": {
						"value": "[parameters('publicIPAddressName')]"
					},
					"publicIPAddressType": {
						"value": "Dynamic"
					},
					"dnsPrefix": {
						"value": "[parameters('dnsNameForPublicIP')]"
					},
					"publicIpRGName": {
						"value": "[parameters('existingIPRGName')]"
					}
				}
			}
		}, {
			"apiVersion" : "[variables('apiVersion')]",
			"type" : "Microsoft.Network/virtualNetworks",
			"name" : "[variables('virtualNetworkName')]",
			"location" : "[resourceGroup().location]",
			"properties" : {
				"addressSpace" : {
					"addressPrefixes" : [
						"[variables('addressPrefix')]"
					]
				},
				"subnets" : [{
						"name" : "[variables('subnetName')]",
						"properties" : {
							"addressPrefix" : "[variables('subnetPrefix')]"
						}
					}
				]
			}
		}, {
			"apiVersion" : "[variables('apiVersion')]",
			"type" : "Microsoft.Network/networkInterfaces",
			"name" : "[variables('nicName')]",
			"location" : "[resourceGroup().location]",
			"dependsOn" : [
				"[parameters('publicIPAddressName')]",
				"[variables('virtualNetworkName')]"
			],
			"properties" : {
				"ipConfigurations" : [{
						"name" : "ipconfig1",
						"properties" : {
							"privateIPAllocationMethod" : "Dynamic",
							"publicIPAddress" : {
								"id" : "[resourceId('Microsoft.Network/publicIPAddresses',parameters('publicIPAddressName'))]"
							},
							"subnet" : {
								"id" : "[variables('subnetRef')]"
							}
						}
					}
				]
			}
		}, {
			"apiVersion" : "[variables('apiVersion')]",
			"type" : "Microsoft.Compute/virtualMachines",
			"name" : "[variables('vmName')]",
			"location" : "[resourceGroup().location]",
			"dependsOn" : [
				"storageAcountSetup",
				"[variables('nicName')]"
			],
			"properties" : {
				"mode" : "Incremental",
				"templateLink" : {
					"uri" : "variables['vmSetupURL']",
					"contentVersion" : "1.0.0.0"
				},
				"parameters" : {
					"vmName" : {
						"value" : "[variables('vmName')]"
					},
					"adminUsername" : {
						"value" : "[parameters('adminUsername')]"
					},
					"adminPassword" : {
						"value" : "[parameters('adminPassword')]"
					},
					"vmSize" : {
						"value" : "[parameters('vmSize')]"
					},
					"nicName" : {
						"value" : "[variables('nicName')]"
					},
					"vhdStorageAccountName" : {
						"value" : "[parameters('storageAccountName')]"
					}
				}
			},
			"resources" : [{
					"type" : "extensions",
					"name" : "CustomScriptExtension",
					"apiVersion" : "[variables('apiVersion')]",
					"location" : "[resourceGroup().location]",
					"dependsOn" : [
						"[variables('vmName')]"
					],
					"properties" : {
						"mode" : "Incremental",
						"templateLink" : {
							"uri" : "[variables('vmCustonScriptSetupURL')]",
							"contentVersion" : "1.0.0.0"
						},
						"parameters" : {
							"cloudEmail" : {
								"value" : "[parameters('cloudEmail')]"
							},
							"cloudPassword" : {
								"value" : "[parameters('cloudPassword')]"
							},
							"cloudTitle" : {
								"value" : "[parameters('cloudTitle')]"
							},
							"cloudPhone" : {
								"value" : "[parameters('cloudPhone')]"
							},
							"cloudOrgName" : {
								"value" : "[parameters('cloudOrgName')]"
							},
							"cloudCountry" : {
								"value" : "[parameters('cloudCountry')]"
							},
							"connectorUUIDList" : {
								"value" : "[variables('connectorUUIDList')]"
							}
						}
					}
				}
			]
		}
	]
}
