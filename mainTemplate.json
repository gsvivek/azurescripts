{
	"$schema" : "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
	"contentVersion" : "1.0.0.0",
	"parameters" : {
		"adminUsername" : {
			"type" : "securestring",
			"metadata" : {
				"description" : "Admin username of the VM"
			}
		},
		"authType" : {
			"type" : "string",
			"metadata" : {
				"description" : "Type of authentication for the VM - Password for Windows, Password or SSH key for Linux."
			}
		},
		"adminPassword" : {
			"type" : "securestring",
			"defaultValue" : "",
			"metadata" : {
				"description" : "Admin password of the VM"
			}
		},
		"sshPublicKey" : {
			"type" : "securestring",
			"defaultValue" : "",
			"metadata" : {
				"description" : "SSH rsa public key file as a string."
			}
		},
		"vmSize" : {
			"type" : "string",
			"metadata" : {
				"description" : "Size of the VM"
			}
		},
		"os" : {
			"type" : "string",
			"defaultValue" : "windows",
			"allowedValues" : [
				"windows",
				"linux"
			],
			"metadata" : {
				"description" : "The OS type chosen by the user. Allowed values are Windows and Linux"
			}
		},
		"cloudUsername" : {
			"type" : "string",
			"metadata" : {
				"description" : "The username of the Informatica Cloud user."
			}
		},
		"cloudEmail" : {
			"type" : "string",
			"metadata" : {
				"description" : "The email of the Informatica Cloud user."
			}
		},
		"cloudPassword" : {
			"type" : "secureString",
			"metadata" : {
				"description" : "The password for the Informatica Cloud user account."
			}
		},
		"firstName" : {
			"type" : "string",
			"metadata" : {
				"description" : "The first name of the Informatica Cloud user."
			}
		},
		"lastName" : {
			"type" : "string",
			"metadata" : {
				"description" : "The last name of the Informatica Cloud user."
			}
		},
		"title" : {
			"type" : "string",
			"metadata" : {
				"description" : "The title of the Informatica Cloud user."
			}
		},
		"orgName" : {
			"type" : "string",
			"metadata" : {
				"description" : "The Company name of the Informatica Cloud user."
			}
		},
		"country" : {
			"type" : "string",
			"metadata" : {
				"description" : "The country of the Informatica Cloud user."
			}
		},
		"phone" : {
			"type" : "string",
			"metadata" : {
				"description" : "The phone number of the Informatica Cloud user."
			}
		},
		"cloudConnector1" : {
			"type" : "string",
			"metadata" : {
				"description" : "The target connector chosen by the user."
			}
		},
		"cloudConnector2" : {
			"type" : "string",
			"metadata" : {
				"description" : "The source connector chosen by the user."
			}
		},
		"location" : {
			"type" : "string",
			"defaultValue" : "eastus",
			"metadata" : {
				"description" : "Location in which the Azure resources will be deployed."
			}
		},
		"artifactsBaseUrl" : {
			"type" : "string",
			"metadata" : {
				"artifactsBaseUrl" : "Base URL of the Publisher Template gallery package"
			}
		}
	},
	"variables" : {
		"scriptsUri" : "[concat(parameters('artifactsBaseUrl'),'/')]",
		"storageAccountName" : "[concat('icspayg', uniqueString(resourceGroup().id))]",
		"storageAccountType": "Standard_LRS",
		"nicName" : "IcsPaygNic",
		"addressPrefix" : "10.0.0.0/16",
		"subnetName" : "Subnet",
		"subnetPrefix" : "10.0.0.0/24",
		"vmName" : "[concat('icspayg',parameters('os'))]",
		"virtualNetworkName" : "IcsPaygVNET",
		"publicIPAddressName": "[concat('icspaygIP', uniqueString(resourceGroup().id))]",
		"IPAddressType": "Dynamic",
		"vnetID" : "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
		"subnetRef" : "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
		"state" : "CA",
		"connectorUUIDList" : "[concat(parameters('cloudConnector1'),'|',parameters('cloudConnector2'))]",
		"vmSetupURL" : "[concat(variables('scriptsUri'), 'vm_script_', parameters('os'), '_', parameters('authType'), '.json')]"
	},
	"resources" : [
		{
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountName')]",
            "apiVersion": "2016-01-01",
            "location": "[parameters('location')]",
            "properties": {
            },
            "sku": {
                "name": "[variables('storageAccountType')]"
            },  
            "kind": "Storage"
        }, {
			"apiVersion": "2016-06-01",
			"type": "Microsoft.Network/publicIPAddresses",
			"name": "[variables('publicIPAddressName')]",
			"location": "[resourceGroup().location]",
			"properties": {
				"publicIPAllocationMethod": "[variables('IPAddressType')]"
			}
		}, {
			"apiVersion" : "2016-06-01",
			"type" : "Microsoft.Network/virtualNetworks",
			"name" : "[variables('virtualNetworkName')]",
			"location" : "[resourceGroup().location]",
			"properties" : {
				"addressSpace" : {
					"addressPrefixes" : [
						"[variables('addressPrefix')]"
					]
				},
				"subnets" : [{
						"name" : "[variables('subnetName')]",
						"properties" : {
							"addressPrefix" : "[variables('subnetPrefix')]"
						}
					}
				]
			}
		}, {
			"apiVersion" : "2016-06-01",
			"type" : "Microsoft.Network/networkInterfaces",
			"name" : "[variables('nicName')]",
			"location" : "[resourceGroup().location]",
			"dependsOn" : [
				"[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
				"[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
			],
			"properties" : {
				"ipConfigurations" : [{
						"name" : "ipconfig1",
						"properties" : {
							"privateIPAllocationMethod" : "[variables('IPAddressType')]",
							"publicIPAddress" : {
								"id" : "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
							},
							"subnet" : {
								"id" : "[variables('subnetRef')]"
							}
						}
					}
				]
			}
		}, {
			"apiVersion" : "2016-06-01",
			"type" : "Microsoft.Resources/deployments",
			"name" : "[concat(variables('vmName'),'-vm')]",
			"dependsOn" : [
				"[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
				"[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
			],
			"properties" : {
				"mode" : "Incremental",
				"templateLink" : {
					"uri" : "[variables('vmSetupURL')]",
					"contentVersion" : "1.0.0.0"
				},
				"parameters" : {
					"vmName" : {
						"value" : "[variables('vmName')]"
					},
					"adminUsername" : {
						"value" : "[parameters('adminUsername')]"
					},
					"adminPassword" : {
						"value" : "[parameters('adminPassword')]"
					},
					"sshPublicKey" : {
						"value" : "[parameters('sshPublicKey')]"
					},
					"vmSize" : {
						"value" : "[parameters('vmSize')]"
					},
					"nicName" : {
						"value" : "[variables('nicName')]"
					},
					"vhdStorageAccountName" : {
						"value" : "[variables('storageAccountName')]"
					},
					"cloudUsername" : {
						"value" : "[parameters('cloudUsername')]"
					},
					"cloudEmail" : {
						"value" : "[parameters('cloudEmail')]"
					},
					"cloudPassword" : {
						"value" : "[parameters('cloudPassword')]"
					},
					"firstName" : {
						"value" : "[parameters('firstName')]"
					},
					"lastName" : {
						"value" : "[parameters('lastName')]"
					},
					"title" : {
						"value" : "[parameters('title')]"
					},
					"orgName" : {
						"value" : "[parameters('orgName')]"
					},
					"phone" : {
						"value" : "[parameters('phone')]"
					},
					"country" : {
						"value" : "[parameters('country')]"
					},
					"state" : {
						"value" : "[variables('state')]"
					},
					"connectorUUIDList" : {
						"value" : "[variables('connectorUUIDList')]"
					},
					"scriptsUri" : {
						"value" : "[variables('scriptsUri')]"
					}
				}
			}
		}
	]
}